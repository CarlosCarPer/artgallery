package com.carlos.artgallery.models.entities;
// Generated 29 mar. 2021 15:44:49 by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "account")
public class Account implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private int accountid;
	private String platform;
	private String username;
	private String pass;
	private String url;
	private Set<User> users = new HashSet<User>();

	public Account() {
	}

	public Account(int accountid) {
		this.accountid = accountid;
	}

	public Account(int accountid, String platform, String username, String pass, String url, Set<User> users) {
		this.accountid = accountid;
		this.platform = platform;
		this.username = username;
		this.pass = pass;
		this.url = url;
		this.users = users;
	}

	@Id

	@Column(name = "accountid", unique = true, nullable = false)
	public int getAccountid() {
		return this.accountid;
	}

	public void setAccountid(int accountid) {
		this.accountid = accountid;
	}

	@Column(name = "platform", length = 100)
	public String getPlatform() {
		return this.platform;
	}

	public void setPlatform(String platform) {
		this.platform = platform;
	}

	@Column(name = "username", length = 10485760)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "pass", length = 100)
	public String getPass() {
		return this.pass;
	}

	public void setPass(String pass) {
		this.pass = pass;
	}

	@Column(name = "url", length = 100)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_account", joinColumns = {
			@JoinColumn(name = "code_account", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "code_user", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
